{
  // Define the log levels for each logger, available levels: trace, debug, info, warn, error, fatal.
  // To disable a logger, set it to silent.
  verboseness: {
    SquadServer: 'info',
    LogParser: 'info',
    RCON: 'info',
    RCONSquad: 'info',
    CachedGameStatus: 'info',
    PluginLoader: 'info',
    AdminList: 'info',
    // Will also be used for FTP/SFTP debug logs if enabled.
    LogReader: 'info',
    GithubInfo: 'info',
  },
  debugLogMatching: {
    // Log matched logs, that will be turned into events. They show at DEBUG log level.
    // verboseness.LogParser HAS TO BE set to 'debug' for this to work.
    // Warning: very verbose, only use in development.
    showMatching: false,
    // Log non matched logs. They show at WARN log level.
    // You can use this to find new logs, that could be turned into events !
    // If however, the log appear useless, you can add it to ignoreRegexMatch to reduce the verboseness.
    // Warning: very verbose, only use in development.
    showNonMatching: false,
    // Every non matched line that will be additionally tested, if it match it will not be logged.
    // Reduce the verboseness by ignoring logs you know are not useful to us.
    // Use this with caution.
    ignoreRegexMatch: [
      '^LogEOS:',
      '^LogEOSNetworkAuth:',
      '^LogSquadCommon: SQCommonStatics Check Permissions',
      '^LogEOSAntiCheat::',
      '^LogSquad: RotorWashEffectListener::EndPlay \\(reason 0\\)',
      "^LogEOSSessionListening: Verbose: Session 'GameSession'",
      '^LogSquadOnlineServices: Icmp ping failed',
      '^LogRCONServer: \\d+:FRCONSocket::CloseConnection\\(\\):',
      '^LogRCONServer: \\d+:FRCONSocket::Run\\(\\):',
      '^LogSquad: Warning: ASQWeapon::DealDamage was called but there was no valid actor or component.',
    ],
  },
}
